diff --git a/kernel/Kbuild b/kernel/Kbuild
index d140e05..cde0b28 100644
--- a/kernel/Kbuild
+++ b/kernel/Kbuild
@@ -58,9 +58,9 @@ $(foreach _module, $(NV_KERNEL_MODULES), \
 
 EXTRA_CFLAGS += -I$(src)/common/inc
 EXTRA_CFLAGS += -I$(src)
 EXTRA_CFLAGS += -Wall -MD $(DEFINES) $(INCLUDES) -Wno-cast-qual -Wno-error -Wno-format-extra-args
-EXTRA_CFLAGS += -D__KERNEL__ -DMODULE -DNVRM -DNV_VERSION_STRING=\"410.73\" -Wno-unused-function -Wuninitialized -fno-strict-aliasing -mno-red-zone -mcmodel=kernel -DNV_UVM_ENABLE
+EXTRA_CFLAGS += -D__KERNEL__ -DMODULE -DNVRM -DNV_VERSION_STRING=\"410.73\" -march=native -Wno-unused-function -Wuninitialized -fno-strict-aliasing -mno-red-zone -mcmodel=kernel -DNV_UVM_ENABLE
 EXTRA_CFLAGS += $(call cc-option,-Werror=undef,)
 
 #
 # Detect SGI UV systems and apply system-specific optimizations.
diff --git a/kernel/conftest.sh b/kernel/conftest.sh
index 28353d9..c686b05 100755
--- a/kernel/conftest.sh
+++ b/kernel/conftest.sh
@@ -133,9 +133,9 @@ test_headers() {
     translate_and_find_header_files $HEADERS_ARCH $FILES_ARCH
 }
 
 build_cflags() {
-    BASE_CFLAGS="-O2 -D__KERNEL__ \
+    BASE_CFLAGS="-O3 -march=native -D__KERNEL__ \
 -DKBUILD_BASENAME=\"#conftest$$\" -DKBUILD_MODNAME=\"#conftest$$\" \
 -nostdinc -isystem $ISYSTEM"
 
     if [ "$OUTPUT" != "$SOURCES" ]; then
@@ -602,9 +602,9 @@ compile_test() {
                 return
             fi
 
             echo "$CONFTEST_PREAMBLE
-            #include <linux/pm.h>  
+            #include <linux/pm.h>
             int conftest_pm_message_t(void) {
                 return offsetof(pm_message_t, event);
             }" > conftest$$.c
 
@@ -796,9 +796,9 @@ compile_test() {
         ;;
 
         acpi_device_id)
             #
-            # Determine if the 'acpi_device_id' structure has 
+            # Determine if the 'acpi_device_id' structure has
             # a 'driver_data' member.
             #
             CODE="
             #include <linux/acpi.h>
@@ -1007,9 +1007,9 @@ compile_test() {
 
         register_cpu_notifier)
             #
             # Determine if register_cpu_notifier() is present
-            # 
+            #
             # register_cpu_notifier() was removed by the following commit
             #   2016 Dec 25: b272f732f888d4cf43c943a40c9aaa836f9b7431
             #
             CODE="
@@ -1022,12 +1022,12 @@ compile_test() {
 
         cpuhp_setup_state)
             #
             # Determine if cpuhp_setup_state() is present
-            # 
+            #
             # cpuhp_setup_state() was added by the following commit
-            #   2016 Feb 26: 5b7aa87e0482be768486e0c2277aa4122487eb9d 
-            # 
+            #   2016 Feb 26: 5b7aa87e0482be768486e0c2277aa4122487eb9d
+            #
             # It is used as a replacement for register_cpu_notifier
             CODE="
             #include <linux/cpu.h>
             void conftest_cpuhp_setup_state(void) {
@@ -1169,9 +1169,9 @@ compile_test() {
         ;;
 
         proc_dir_entry)
             #
-            # Determine if the 'proc_dir_entry' structure has 
+            # Determine if the 'proc_dir_entry' structure has
             # an 'owner' member.
             #
             CODE="
             #include <linux/proc_fs.h>
@@ -1367,9 +1367,9 @@ compile_test() {
                 echo "#undef NV_SG_ALLOC_TABLE_PRESENT" | append_conftest "functions"
                 echo "#undef NV_SG_ALLOC_TABLE_FROM_PAGES_PRESENT" | append_conftest "functions"
                 return
             fi
-            
+
             rm -f conftest$$.o
 
             CODE="
             #include <linux/scatterlist.h>
@@ -1395,9 +1395,9 @@ compile_test() {
             # arguments it takes.
             #
             echo "$CONFTEST_PREAMBLE
             #if defined(NV_LINUX_EFI_H_PRESENT)
-            #include <linux/efi.h> 
+            #include <linux/efi.h>
             #endif
             int conftest_efi_enabled(void) {
                 return efi_enabled();
             }" > conftest$$.c
@@ -1413,9 +1413,9 @@ compile_test() {
             fi
 
             echo "$CONFTEST_PREAMBLE
             #if defined(NV_LINUX_EFI_H_PRESENT)
-            #include <linux/efi.h> 
+            #include <linux/efi.h>
             #endif
             int conftest_efi_enabled(void) {
                 return efi_enabled(0);
             }" > conftest$$.c
@@ -1583,9 +1583,9 @@ compile_test() {
             struct mdev_parent_ops conftest_mdev_parent;
             "
 
             compile_check_conftest "$CODE" "NV_MDEV_PARENT_OPS_STRUCT_PRESENT" "" "types"
-        ;; 
+        ;;
 
         mdev_parent_dev)
             #
             # Determine if mdev_parent_dev() function is present or not
@@ -1911,9 +1911,9 @@ compile_test() {
             }"
 
             compile_check_conftest "$CODE" "NV_PM_VT_SWITCH_REQUIRED_PRESENT" "" "functions"
         ;;
-        
+
         list_cut_position)
             #
             # Determine if the list_cut_position() function is present.
             #
@@ -1955,9 +1955,9 @@ compile_test() {
                 xen_ioemu_inject_msi();
             }"
 
             compile_check_conftest "$CODE" "NV_XEN_IOEMU_INJECT_MSI" "" "functions"
-        ;; 
+        ;;
 
         phys_to_dma)
             #
             # Determine if the phys_to_dma function is present.
@@ -1986,18 +1986,18 @@ compile_test() {
 
         dma_map_ops)
             #
             # Determine if the 'struct dma_map_ops' type is present.
-            # 
+            #
             CODE="
             #include <linux/dma-mapping.h>
             void conftest_dma_map_ops(void) {
                 struct dma_map_ops ops;
             }"
 
             compile_check_conftest "$CODE" "NV_DMA_MAP_OPS_PRESENT" "" "types"
         ;;
- 
+
         get_dma_ops)
             #
             # Determine if the get_dma_ops() function is present.
             #
@@ -2697,9 +2697,9 @@ compile_test() {
                 echo "#undef NV_MM_CONTEXT_T_HAS_ID" | append_conftest "types"
                 return
             fi
         ;;
-        get_user_pages)     
+        get_user_pages)
             #
             # Conftest for get_user_pages()
             #
             # Use long type for get_user_pages and unsigned long for nr_pages
@@ -2729,16 +2729,16 @@ compile_test() {
                 return 0;
             }" > conftest$$.c
 
             $CC $CFLAGS -c conftest$$.c > /dev/null 2>&1
-            rm -f conftest$$.c    
+            rm -f conftest$$.c
             if [ -f conftest$$.o ]; then
                 echo "#define NV_GET_USER_PAGES_HAS_WRITE_AND_FORCE_ARGS" | append_conftest "functions"
                 echo "#undef NV_GET_USER_PAGES_HAS_TASK_STRUCT" | append_conftest "functions"
                 rm -f conftest$$.o
                 return
             fi
-            
+
             # Conftest #2: Check if get_user_pages has gup_flags instead of write and force parameters.
             # Return if available.
             # Fall through to default case if absent.
 
@@ -2760,9 +2760,9 @@ compile_test() {
                 echo "#undef NV_GET_USER_PAGES_HAS_TASK_STRUCT" | append_conftest "functions"
                 rm -f conftest$$.o
                 return
             fi
-            
+
             echo "#define NV_GET_USER_PAGES_HAS_WRITE_AND_FORCE_ARGS" | append_conftest "functions"
             echo "#define NV_GET_USER_PAGES_HAS_TASK_STRUCT" | append_conftest "functions"
 
             return
@@ -2832,9 +2832,9 @@ compile_test() {
                 return
             fi
 
             # conftest #3: check if get_user_pages_remote() has locked argument
-            
+
             echo "$CONFTEST_PREAMBLE
             #include <linux/mm.h>
             long get_user_pages_remote(struct task_struct *tsk,
                                        struct mm_struct *mm,
@@ -3443,9 +3443,9 @@ compile_test() {
 
             compile_check_conftest "$CODE" "NV_DRM_MODE_OBJECT_FIND_HAS_FILE_PRIV_ARG" | append_conftest "types"
         ;;
 
-        pci_enable_msix_range) 
+        pci_enable_msix_range)
             #
             # Determine if the pci_enable_msix_range() function is present.
             # pci_enable_msix_range() replaced pci_enable_msix() in 3.14-rc1:
             # 2014-01-03  302a2523c277bea0bbe8340312b09507905849ed
@@ -3650,9 +3650,9 @@ case "$6" in
         #
         RET=1
         DIRS="generated linux"
         FILE=""
-        
+
         for DIR in $DIRS; do
             if [ -f $HEADERS/$DIR/utsrelease.h ]; then
                 FILE="$HEADERS/$DIR/utsrelease.h"
                 break
